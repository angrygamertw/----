<?xml version="1.0" encoding="UTF-8"?>
<mx:PopupWindow xmlns:mx="http://www.adobe.com/2006/mxml" width="694" height="550" creationComplete="{init();}">
	<mx:Script><![CDATA[
        import com.kbmj.viking.lib.*;
        import com.kbmj.viking.view.*;
        import com.kbmj.viking.vo.*;
        import flash.display.*;
        import flash.events.*;
        import flash.utils.*;
        import mx.binding.*;
        import mx.collections.*;
        import mx.containers.*;
        import mx.controls.*;
        import mx.controls.dataGridClasses.*;
        import mx.core.*;
        import mx.events.*;

        private var  mailDetailWindow:MailDetailWindow;
        private var  mailTransmitWindow:MailTransmitWindow;
        public static const  REPLY_MAIL:String = "replyMail";
        public static const  MAIL_SEND:String = "mailSend";
        public static const  LOAD_MAIL_LIST_WITH_PAGE:String = "loadMailListWithPage";
        public static const  MAIL_DETAIL:String = "mailDetail";
        public static const  CLOSED_MAIL_LIST_WINDOW:String = "closedMailListWindow";


        public function cToolTip() : String
        {
            return Utils.i18n("generalShowDetail");
        }// end function

        public function closeForAllMap() : void
        {
            this.onClose();
            return;
        }// end function

        public function _MailListWindow_ClassFactory2_i() : ClassFactory
        {
            var _loc_1:* = new ClassFactory();
            stateRenderer = _loc_1;
            _loc_1.generator = MailListWindow_inlineComponent2;
            _loc_1.properties = {outerDocument:this};
            return _loc_1;
        }// end function

        public function init() : void
        {
            mailDetailWindow.addEventListener(MailDetailWindow.REPLY_MAIL_BY_DETAIL, handleEvent);
            MovieClip(Loader(_swf_make.getChildAt(0)).content).gotoAndPlay("button_make");
            MovieClip(Loader(_swf_close.getChildAt(0)).content).gotoAndPlay("button_close");
            if (_previousPage)
            {
                MovieClip(Loader(_swf_prev.getChildAt(0)).content).gotoAndPlay("button_prev");
            }
            else
            {
                MovieClip(Loader(_swf_prev.getChildAt(0)).content).gotoAndPlay("button_prev_off");
            }
            if (_nextPage)
            {
                MovieClip(Loader(_swf_next.getChildAt(0)).content).gotoAndPlay("button_next");
            }
            else
            {
                MovieClip(Loader(_swf_next.getChildAt(0)).content).gotoAndPlay("button_next_off");
            }
            return;
        }// end function

        public function onDetail(param1:Object) : void
        {
            dispatchEvent(new PopupEvent(MAIL_DETAIL, param1.mailId));
            return;
        }// end function

        public function setColor(param1:Boolean) : uint
        {
            return !param1 ? (12337210) : (0);
        }// end function

        public function onMail() : void
        {
            popupWindow(mailTransmitWindow, false);
            mailTransmitWindow.addEventListener(MailTransmitWindow.SUBMIT_MAIL, submitMail);
            return;
        }// end function

        public function _MailListWindow_DataGridColumn2_i() : DataGridColumn
        {
            var _loc_1:* = new DataGridColumn();
            _MailListWindow_DataGridColumn2 = _loc_1;
            _loc_1.dataField = "subject";
            BindingManager.executeBindings(this, "_MailListWindow_DataGridColumn2", _MailListWindow_DataGridColumn2);
            return _loc_1;
        }// end function

        public function onReply(param1:Object) : void
        {
            dispatchEvent(new PopupEvent(REPLY_MAIL, param1));
            return;
        }// end function

        public function handleEvent(event:PopupEvent) : void
        {
            dispatchEvent(new PopupEvent(REPLY_MAIL, event.param));
            return;
        }// end function

        public function _MailListWindow_ClassFactory1_i() : ClassFactory
        {
            var _loc_1:* = new ClassFactory();
            subjectRenderer = _loc_1;
            _loc_1.generator = MailListWindow_inlineComponent1;
            _loc_1.properties = {outerDocument:this};
            return _loc_1;
        }// end function

        public function setMails(param1:Array, param2:Object) : void
        {
            _mailsData = new ArrayCollection(param1);
            pages = param2;
            return;
        }// end function

        public function _MailListWindow_DataGridColumn1_i() : DataGridColumn
        {
            var _loc_1:* = new DataGridColumn();
            _MailListWindow_DataGridColumn1 = _loc_1;
            _loc_1.width = 40;
            _loc_1.setStyle("textAlign", "center");
            BindingManager.executeBindings(this, "_MailListWindow_DataGridColumn1", _MailListWindow_DataGridColumn1);
            return _loc_1;
        }// end function

        public function detailWindowPopup(param1:MailVO) : void
        {
            var _loc_2:MailVO = null;
            for each (_loc_2 in _mailsData)
            {
                
                if (_loc_2.mailId == param1.mailId)
                {
                    _loc_2.readAt = new Date().toString();
                }
            }
            mailDetailWindow.mail = param1;
            popupWindow(mailDetailWindow, false);
            return;
        }// end function

        public function goToPage(param1:int) : void
        {
            dispatchEvent(new PopupEvent(LOAD_MAIL_LIST_WITH_PAGE, param1));
            return;
        }// end function

        public function _MailListWindow_DataGridColumn4_i() : DataGridColumn
        {
            var _loc_1:* = new DataGridColumn();
            _MailListWindow_DataGridColumn4 = _loc_1;
            _loc_1.dataField = "sentAt";
            _loc_1.width = 200;
            BindingManager.executeBindings(this, "_MailListWindow_DataGridColumn4", _MailListWindow_DataGridColumn4);
            return _loc_1;
        }// end function

        public function componentText(param1:Boolean) : String
        {
            return param1 ? (Utils.i18n("mailListRead")) : (Utils.i18n("mailListNoRead"));
        }// end function

        public function closeTransmitWindow() : void
        {
            mailTransmitWindow.removeEventListener(MailTransmitWindow.SUBMIT_MAIL, submitMail);
            mailTransmitWindow.closeWindow();
            return;
        }// end function

        public function submitMail(event:PopupEvent) : void
        {
            var _loc_2:* = Object(event.param);
            dispatchEvent(new PopupEvent(MAIL_SEND, _loc_2));
            return;
        }// end function

        public function _MailListWindow_DataGridColumn3_i() : DataGridColumn
        {
            var _loc_1:* = new DataGridColumn();
            _MailListWindow_DataGridColumn3 = _loc_1;
            _loc_1.dataField = "senderName";
            _loc_1.width = 150;
            BindingManager.executeBindings(this, "_MailListWindow_DataGridColumn3", _MailListWindow_DataGridColumn3);
            return _loc_1;
        }// end function

        public function close() : void
        {
            dispatchEvent(new PopupEvent(CLOSED_MAIL_LIST_WINDOW, {window:this}));
            return;
        }// end function
    ]]></mx:Script>

	<mx:Canvas id="windowLayer"/>
	<mx:Text id="_MailListWindow_Text1" styleName="PanelBaseTitle" x="320" y="80" text="{Utils.i18n("mailListAllMail")}"/>
	<mx:Canvas id="mailCanvas">
		<mx:Box x="40" y="130">
			<mx:DataGrid id="colony_data_list" width="630" rowCount="11" rowHeight="26" styleName="DataGridBase" selectable="false" sortableColumns="false" columns="{[_MailListWindow_DataGridColumn1_i(), _MailListWindow_DataGridColumn2_i(), _MailListWindow_DataGridColumn3_i(), _MailListWindow_DataGridColumn4_i()]}" dataProvider='{_mailsData}'/>
		</mx:Box>
		<mx:HBox x="525" y="450">
			<mx:Image id="_MailListWindow_Image1" width="50" click="{goToPage((_currentPage - 1));}" source="{_swf_prev}" enabled="_previousPage"/>
			<mx:Label id="_MailListWindow_Label1" fontSize="14" text="_currentPage + "/" + _totalPages"/>
			<mx:Image id="_MailListWindow_Image2" width="50" click="{goToPage((_currentPage + 1));}" source="{_swf_next}" enabled="_nextPage"/>
		</mx:HBox>
		<mx:Image id="_MailListWindow_Image3" x="235" y="485" click="{onMail();}" source="{_swf_make}"/>
		<mx:Image id="_MailListWindow_Image4" x="365" y="485" click="{close();}" source="{_swf_close}"/>
	</mx:Canvas>

</mx:PopupWindow>
