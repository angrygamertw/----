<?xml version="1.0" encoding="UTF-8"?>
<mx:PopupWindow xmlns:mx="http://www.adobe.com/2006/mxml" width="760" height="560" creationComplete="{onCreate();}">
	<mx:Script><![CDATA[
        import com.kbmj.viking.lib.*;
        import com.kbmj.viking.view.*;
        import flash.display.*;
        import flash.events.*;
        import flash.utils.*;
        import mx.binding.*;
        import mx.collections.*;
        import mx.containers.*;
        import mx.controls.*;
        import mx.controls.dataGridClasses.*;
        import mx.core.*;
        import mx.events.*;

        private var  factionId:int = 0;
        private var  alertWindow:AlertWindow;
        private var  _admissionComment:String;
        private var  resetBelong:int;
        public var  factionName:Object;
        private var  _selectGuildId:int;
        private var  admissionGuildWindow:AdmissionGuildWindow;
        public static var  selectButtonOff:Class;
        public static var  selectButton:Class;
        public static const  SEARCH_PLAYER:String = "searchPlayer";
        public static var  iconFaction01:Class;
        public static var  iconFaction02:Class;
        public static var  iconFaction03:Class;
        public static var  iconFaction04:Class;
        public static const  CLOSE_SEARCH_GUILD_WINDOW:String = "closeSearchGuildWindow";
        public static var  iconFaction05:Class;
        public static const  DETAIL_GUILS:String = "detailGuilds";
        public static const  ADMISSION_GUILD:String = "admissionGuild";


        public function init(param1:Array, param2:Object) : void
        {
            var _loc_4:int = 0;
            var _loc_5:Object = null;
            var _loc_6:int = 0;
            dataArray = new Array();
            viewData = new ArrayCollection();
            factionArray = new ArrayCollection(new Array(param1.length));
            factionId = param2.factionId;
            var _loc_3:int = 0;
            while (_loc_3 < 9)
            {
                
                dataArray[_loc_3] = new Array();
                _loc_4 = 0;
                while (_loc_4 < 4)
                {
                    
                    _loc_5 = param1[_loc_3 * 4 + _loc_4];
                    _loc_6 = _loc_5.guild.faction_id;
                    dataArray[_loc_3].push({name:factionName[_loc_6], id:_loc_4, icon:_loc_6 == 2 ? (iconFaction02) : (_loc_6 == 3 ? (iconFaction03) : (_loc_6 == 4 ? (iconFaction04) : (_loc_6 == 5 ? (iconFaction05) : (iconFaction01)))), member:_loc_5.guild.guild_memberships_count, notoriety:_loc_5.guild.notoriety, army:"---", dedicationPoint:_loc_5.guild.dedication_point, guildId:_loc_5.guild.id, guild_rank:_loc_5.guild.guild_rank, factionId:_loc_5.guild.faction_id, territories_count:_loc_5.guild.all_territories_count, level_max_properties_count:_loc_5.guild.level_max_properties_count ? (_loc_5.guild.level_max_properties_count) : (0), maxCount:_loc_5.guild.max_guild_memberships_count});
                    _loc_4++;
                }
                _loc_3++;
            }
            viewData = new ArrayCollection(dataArray);
            admissionGuildWindow.addEventListener(AdmissionGuildWindow.ADMISSION, handleEvent);
            return;
        }// end function

        public function _SearchGuildWindow_DataGridColumn2_i() : DataGridColumn
        {
            var _loc_1:* = new DataGridColumn();
            _SearchGuildWindow_DataGridColumn2 = _loc_1;
            _loc_1.dataField = "member";
            BindingManager.executeBindings(this, "_SearchGuildWindow_DataGridColumn2", _SearchGuildWindow_DataGridColumn2);
            return _loc_1;
        }// end function

        public function _SearchGuildWindow_DataGridColumn6_i() : DataGridColumn
        {
            var _loc_1:* = new DataGridColumn();
            _SearchGuildWindow_DataGridColumn6 = _loc_1;
            BindingManager.executeBindings(this, "_SearchGuildWindow_DataGridColumn6", _SearchGuildWindow_DataGridColumn6);
            return _loc_1;
        }// end function

        public function getSelectButtonType(param1:Object) : Class
        {
            if (param1.factionId == factionId)
            {
                return selectButton;
            }
            return selectButtonOff;
        }// end function

        public function componentToolTip() : String
        {
            return Utils.i18n("generalShowDetail");
        }// end function

        public function _SearchGuildWindow_ClassFactory1_i() : ClassFactory
        {
            var _loc_1:* = new ClassFactory();
            buttonRenderer = _loc_1;
            _loc_1.generator = SearchGuildWindow_inlineComponent1;
            _loc_1.properties = {outerDocument:this};
            return _loc_1;
        }// end function

        public function onRemove() : void
        {
            strSearch.text = "";
            admissionGuildWindow.removeEventListener(AdmissionGuildWindow.ADMISSION, handleEvent);
            dispatchEvent(new Event(CLOSE_SEARCH_GUILD_WINDOW));
            onClose();
            MovieClip(Loader(_swf_close.getChildAt(0)).content).gotoAndPlay(0);
            MovieClip(Loader(_swf_close.getChildAt(0)).content).gotoAndPlay("button_close");
            MovieClip(Loader(_swf_close_window.getChildAt(0)).content).gotoAndPlay(1);
            return;
        }// end function

        public function handleEvent(event:Event) : void
        {
            _admissionComment = admissionGuildWindow.admissionComment;
            dispatchEvent(new Event(ADMISSION_GUILD));
            onRemove();
            return;
        }// end function

        public function _SearchGuildWindow_DataGridColumn5_i() : DataGridColumn
        {
            var _loc_1:* = new DataGridColumn();
            _SearchGuildWindow_DataGridColumn5 = _loc_1;
            _loc_1.dataField = "member";
            BindingManager.executeBindings(this, "_SearchGuildWindow_DataGridColumn5", _SearchGuildWindow_DataGridColumn5);
            return _loc_1;
        }// end function

        public function _SearchGuildWindow_DataGridColumn1_i() : DataGridColumn
        {
            var _loc_1:* = new DataGridColumn();
            _SearchGuildWindow_DataGridColumn1 = _loc_1;
            _loc_1.dataField = "name";
            _loc_1.width = 64;
            BindingManager.executeBindings(this, "_SearchGuildWindow_DataGridColumn1", _SearchGuildWindow_DataGridColumn1);
            return _loc_1;
        }// end function

        public function _SearchGuildWindow_DataGridColumn9_i() : DataGridColumn
        {
            var _loc_1:* = new DataGridColumn();
            _SearchGuildWindow_DataGridColumn9 = _loc_1;
            BindingManager.executeBindings(this, "_SearchGuildWindow_DataGridColumn9", _SearchGuildWindow_DataGridColumn9);
            return _loc_1;
        }// end function

        public function limitColor(param1:Object) : uint
        {
            if (param1.member >= param1.maxCount)
            {
                return 12337210;
            }
            return 0;
        }// end function

        public function _SearchGuildWindow_ClassFactory4_i() : ClassFactory
        {
            var _loc_1:* = new ClassFactory();
            listRenderer = _loc_1;
            _loc_1.generator = SearchGuildWindow_inlineComponent4;
            _loc_1.properties = {outerDocument:this};
            return _loc_1;
        }// end function

        public function getGuildName(param1:Object) : String
        {
            return param1.name;
        }// end function

        public function onAdmisstion(param1:Object) : void
        {
            if (param1.factionId != factionId)
            {
                return;
            }
            admissionGuildWindow.guildData = param1;
            _selectGuildId = param1.guildId;
            if (param1.member >= param1.maxCount)
            {
                maxLimitAlert();
            }
            else
            {
                this.popupWindow(admissionGuildWindow, false);
            }
            return;
        }// end function

        public function _SearchGuildWindow_DataGridColumn4_i() : DataGridColumn
        {
            var _loc_1:* = new DataGridColumn();
            _SearchGuildWindow_DataGridColumn4 = _loc_1;
            _loc_1.dataField = "name";
            _loc_1.width = 64;
            BindingManager.executeBindings(this, "_SearchGuildWindow_DataGridColumn4", _SearchGuildWindow_DataGridColumn4);
            return _loc_1;
        }// end function

        public function _SearchGuildWindow_DataGridColumn8_i() : DataGridColumn
        {
            var _loc_1:* = new DataGridColumn();
            _SearchGuildWindow_DataGridColumn8 = _loc_1;
            _loc_1.dataField = "member";
            BindingManager.executeBindings(this, "_SearchGuildWindow_DataGridColumn8", _SearchGuildWindow_DataGridColumn8);
            return _loc_1;
        }// end function

        public function getMember(param1:Object) : String
        {
            return param1.member;
        }// end function

        public function _SearchGuildWindow_ClassFactory3_i() : ClassFactory
        {
            var _loc_1:* = new ClassFactory();
            memberRenderer = _loc_1;
            _loc_1.generator = SearchGuildWindow_inlineComponent3;
            _loc_1.properties = {outerDocument:this};
            return _loc_1;
        }// end function

        public function onCreate() : void
        {
            strSearch.text = "";
            MovieClip(Loader(_swf_close.getChildAt(0)).content).gotoAndPlay("button_close");
            return;
        }// end function

        public function gridToolTip(param1:Object) : String
        {
            return Utils.i18n("generalShowDetail");
        }// end function

        public function onGuildDetail(param1:Object) : void
        {
            _selectGuildId = param1.guildId;
            dispatchEvent(new Event(DETAIL_GUILS));
            return;
        }// end function

        public function _SearchGuildWindow_DataGridColumn7_i() : DataGridColumn
        {
            var _loc_1:* = new DataGridColumn();
            _SearchGuildWindow_DataGridColumn7 = _loc_1;
            _loc_1.dataField = "name";
            _loc_1.width = 64;
            BindingManager.executeBindings(this, "_SearchGuildWindow_DataGridColumn7", _SearchGuildWindow_DataGridColumn7);
            return _loc_1;
        }// end function

        public function _SearchGuildWindow_DataGridColumn3_i() : DataGridColumn
        {
            var _loc_1:* = new DataGridColumn();
            _SearchGuildWindow_DataGridColumn3 = _loc_1;
            BindingManager.executeBindings(this, "_SearchGuildWindow_DataGridColumn3", _SearchGuildWindow_DataGridColumn3);
            return _loc_1;
        }// end function

        public function maxLimitAlert() : void
        {
            var _loc_1:* = AlertWindow.show(Utils.i18n("searchGuildCanNotMax"));
            popupWindow(_loc_1, false);
            return;
        }// end function

        public function _SearchGuildWindow_ClassFactory2_i() : ClassFactory
        {
            var _loc_1:* = new ClassFactory();
            linkRenderer = _loc_1;
            _loc_1.generator = SearchGuildWindow_inlineComponent2;
            _loc_1.properties = {outerDocument:this};
            return _loc_1;
        }// end function

        public function getIcon(param1:Object) : Class
        {
            return param1.icon;
        }// end function

        public function stringSearchFilter(event:Event) : void
        {
            trace("検索文字列" + strSearch.text);
            trace(strSearch.text.length);
            if (strSearch.text != "")
            {
                dispatchEvent(new Event(SEARCH_PLAYER));
            }
            else if (strSearch.text.length > 12)
            {
                alertWindow = AlertWindow.show("12文字以内で入力してください。");
                popupWindow(alertWindow, false);
            }
            return;
        }// end function
    ]]></mx:Script>

	<mx:Canvas id="windowLayer"/>
	<mx:Canvas id="searchGuildCanvas">
		<mx:Text id="_SearchGuildWindow_Text1" styleName="DealTitle" x="20" y="80" width="560" text="{Utils.i18n("searchGuildList")}"/>
		<mx:Canvas x="30" y="115" width="542">
			<mx:DataGrid width="100%" height="98" resizableColumns="false" rowCount="1" selectable="false" sortableColumns="false" verticalScrollPolicy="off" styleName="GuildListDataGrid" columns="{[_SearchGuildWindow_DataGridColumn1_i(), _SearchGuildWindow_DataGridColumn2_i(), _SearchGuildWindow_DataGridColumn3_i(), _SearchGuildWindow_DataGridColumn4_i(), _SearchGuildWindow_DataGridColumn5_i(), _SearchGuildWindow_DataGridColumn6_i(), _SearchGuildWindow_DataGridColumn7_i(), _SearchGuildWindow_DataGridColumn8_i(), _SearchGuildWindow_DataGridColumn9_i()]}" paddingTop="0" paddingBottom="0"/>
			<mx:TileList id="_SearchGuildWindow_TileList1" y="20" styleName="GuildAreaList" selectable="false" columnCount="3" rowCount="3" paddingTop="0" paddingBottom="0" dataProvider='{viewData}' itemRenderer="listRenderer"/>
		</mx:Canvas>
		<mx:TextInput id="strSearch" x="413" y="497" width="100" text="" maxChars="12"/>
		<mx:Button label="検索" x="515" y="497" buttonMode="true" click="{stringSearchFilter(event);}"/>
		<mx:Image x="513" y="497" source="_embed_mxml__swf_home_buttons_button_list_search_swf_1353093037" click="{stringSearchFilter(event);}"/>
		<mx:Image id="_SearchGuildWindow_Image2" x="245" y="495" click="{onRemove();}" source="{_swf_close}"/>
		<mx:Image id="_SearchGuildWindow_Image3" x="555" y="80" click="{onRemove();}" source="{_swf_close_window}"/>
	</mx:Canvas>

</mx:PopupWindow>
